{"version":3,"file":"1-timer-effef59a.js","sources":["../../src/js/1-timer.js"],"sourcesContent":["import \"flatpickr/dist/flatpickr.min.css\";\n\nconst startButton = document.querySelector('[data-start]');\nconst todayDate = new Date();\nlet userSelectedDate;\nlet difference;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        userSelectedDate = selectedDates[0];\n        updateButtonState();\n\n        const userSelectedDateMs = userSelectedDate.getTime();\n        const todayDateMs = new Date().getTime();\n        difference = userSelectedDateMs - todayDateMs;\n\n        updateCountdown();\n    },\n};\n\nflatpickr(\"#datetime-picker\", options);\n\nstartButton.addEventListener(\"click\", () => {\n    const intervalId = setInterval(() => {\n        difference -= 1000;\n        updateCountdown();\n        if (difference <= 0) {\n            clearInterval(intervalId);\n        }\n    }, 1000);\n});\n\nfunction updateButtonState() {\n    if (userSelectedDate && userSelectedDate > todayDate) {\n        startButton.disabled = false;\n    } else {\n        startButton.disabled = true;\n        iziToast.error({\n            title: 'Error',\n            message: 'Please choose a date in the future',\n        });\n    }\n}\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nfunction updateCountdown() {\n    const { days, hours, minutes, seconds } = convertMs(difference);\n\n    const dataDays = document.querySelector('[data-days]');\n    const dataHours = document.querySelector('[data-hours]');\n    const dataMinutes = document.querySelector('[data-minutes]');\n    const dataSeconds = document.querySelector('[data-seconds]');\n\n    dataDays.textContent = addLeadingZero(days);\n    dataHours.textContent = addLeadingZero(hours);\n    dataMinutes.textContent = addLeadingZero(minutes);\n    dataSeconds.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n}\n"],"names":["startButton","todayDate","userSelectedDate","difference","options","selectedDates","updateButtonState","userSelectedDateMs","todayDateMs","updateCountdown","intervalId","convertMs","ms","days","hours","minutes","seconds","dataDays","dataHours","dataMinutes","dataSeconds","addLeadingZero","value"],"mappings":"6BAEA,MAAMA,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAY,IAAI,KACtB,IAAIC,EACAC,EAEJ,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnBH,EAAmBG,EAAc,GACjCC,IAEA,MAAMC,EAAqBL,EAAiB,UACtCM,EAAc,IAAI,KAAM,EAAC,QAAO,EACtCL,EAAaI,EAAqBC,EAElCC,GACH,CACL,EAEA,UAAU,mBAAoBL,CAAO,EAErCJ,EAAY,iBAAiB,QAAS,IAAM,CACxC,MAAMU,EAAa,YAAY,IAAM,CACjCP,GAAc,IACdM,IACIN,GAAc,GACd,cAAcO,CAAU,CAE/B,EAAE,GAAI,CACX,CAAC,EAED,SAASJ,GAAoB,CACrBJ,GAAoBA,EAAmBD,EACvCD,EAAY,SAAW,IAEvBA,EAAY,SAAW,GACvB,SAAS,MAAM,CACX,MAAO,QACP,QAAS,oCACrB,CAAS,EAET,CAEA,SAASW,EAAUC,EAAI,CAMnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,SAASP,GAAkB,CACvB,KAAM,CAAE,KAAAI,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUR,CAAU,EAExDc,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3DH,EAAS,YAAcI,EAAeR,CAAI,EAC1CK,EAAU,YAAcG,EAAeP,CAAK,EAC5CK,EAAY,YAAcE,EAAeN,CAAO,EAChDK,EAAY,YAAcC,EAAeL,CAAO,CACpD,CAEA,SAASK,EAAeC,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC"}